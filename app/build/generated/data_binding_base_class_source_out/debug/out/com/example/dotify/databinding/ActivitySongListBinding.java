// Generated by view binder compiler. Do not edit!
package com.example.dotify.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Barrier;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import com.example.dotify.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySongListBinding implements ViewBinding {
  @NonNull
  private final SwipeRefreshLayout rootView;

  @NonNull
  public final Barrier barrier;

  @NonNull
  public final Button btnRefresh;

  @NonNull
  public final LinearLayout miniplayer;

  @NonNull
  public final RecyclerView rvSongList;

  @NonNull
  public final SwipeRefreshLayout swiperefresh;

  @NonNull
  public final TextView tvSongTitle;

  private ActivitySongListBinding(@NonNull SwipeRefreshLayout rootView, @NonNull Barrier barrier,
      @NonNull Button btnRefresh, @NonNull LinearLayout miniplayer,
      @NonNull RecyclerView rvSongList, @NonNull SwipeRefreshLayout swiperefresh,
      @NonNull TextView tvSongTitle) {
    this.rootView = rootView;
    this.barrier = barrier;
    this.btnRefresh = btnRefresh;
    this.miniplayer = miniplayer;
    this.rvSongList = rvSongList;
    this.swiperefresh = swiperefresh;
    this.tvSongTitle = tvSongTitle;
  }

  @Override
  @NonNull
  public SwipeRefreshLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySongListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySongListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_song_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySongListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.barrier;
      Barrier barrier = rootView.findViewById(id);
      if (barrier == null) {
        break missingId;
      }

      id = R.id.btnRefresh;
      Button btnRefresh = rootView.findViewById(id);
      if (btnRefresh == null) {
        break missingId;
      }

      id = R.id.miniplayer;
      LinearLayout miniplayer = rootView.findViewById(id);
      if (miniplayer == null) {
        break missingId;
      }

      id = R.id.rvSongList;
      RecyclerView rvSongList = rootView.findViewById(id);
      if (rvSongList == null) {
        break missingId;
      }

      SwipeRefreshLayout swiperefresh = (SwipeRefreshLayout) rootView;

      id = R.id.tvSongTitle;
      TextView tvSongTitle = rootView.findViewById(id);
      if (tvSongTitle == null) {
        break missingId;
      }

      return new ActivitySongListBinding((SwipeRefreshLayout) rootView, barrier, btnRefresh,
          miniplayer, rvSongList, swiperefresh, tvSongTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
